/*
 * This build file was auto generated by running the Gradle 'init' task
 * with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at:
 *
 * https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
        classpath("net.saliman:gradle-cobertura-plugin:2.3.2")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'findbugs'
apply plugin: "net.saliman.cobertura"

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'com.francescojo'
version = '0.1.0'
description = 'Simple file server over HTTP'
def mainClass = 'com.francescojo.simplehttpsvr.Application'

jar {
    baseName = project.name
    version =  project.version

    manifest {
        attributes 'Main-Class': "$mainClass"
    }
}

springBoot {
    mainClass = "$mainClass"
}

dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Spring dependencies
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-cache")
    compile("org.springframework.boot:spring-boot-starter-mustache")

    // 3rd party dependencies
    compile("com.google.guava:guava:19.0")
    compile("com.google.code.gson:gson:2.7")
//    compile("commons-io:commons-io:2.5")

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}
